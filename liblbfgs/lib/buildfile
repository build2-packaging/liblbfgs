intf_libs = # Interface dependencies.
impl_libs = # Implementation dependencies.
#import xxxx_libs += libhello%lib{hello}

# Public headers.
#
pub = [dir_path] ../include/

include $pub

pub_hdrs = $($pub/ pub_hdrs)

lib{lbfgs}: libul{lbfgs}: $pub/{$pub_hdrs}

# Private headers and sources as well as dependencies.
#
libul{lbfgs}: {h c}{**} $impl_libs $intf_libs

libs{lbfgs}: def{lbfgs}: include = ($c.target.system == 'win32-msvc')
def{lbfgs}: libul{lbfgs}

# Build options.
#
out_pfx_inc = [dir_path] $out_root/include/
src_pfx_inc = [dir_path] $src_root/include/
out_pfx_src = [dir_path] $out_root/lib/
src_pfx_src = [dir_path] $src_root/lib/

c.poptions =+ "-I$out_pfx_src" "-I$src_pfx_src" \
              "-I$out_pfx_inc" "-I$src_pfx_inc"

if ($c.target.system == 'mingw32')
  c.loptions += -Wl,--export-all-symbols

# Export options.
#
lib{lbfgs}:
{
  c.export.poptions = "-I$out_pfx_inc" "-I$src_pfx_inc"
  c.export.libs = $intf_libs
}

# For pre-releases use the complete version to make sure they cannot
# be used in place of another pre-release or the final version. See
# the version module for details on the version.* variable values.
#
if $version.pre_release
  lib{lbfgs}: bin.lib.version = "-$version.project_id"
else
  lib{lbfgs}: bin.lib.version = "-$version.major.$version.minor"

# Don't install private headers.
#
h{*}: install = false
